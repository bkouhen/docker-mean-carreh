worker_processes  auto;

events {
    # How many connections each process can accept
    # max_concurrent_connections = worker_processes*worker_connections
    worker_connections  1024;
}

http {
    # Handle Mime Types
    include mime.types;

    # Remove Server Nginx from Headers
    server_tokens off;

    # Secure and prevent external embedding
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-XSS-Protection "1; mode=block";

    # Handle Gzipping
    gzip on;
    gzip_comp_level 3;
    gzip_types text/css;
    gzip_types text/javascript;
    gzip_types application/javascript;

    # Handle Rate Limiting
    limit_req_zone $request_uri zone=MYZONE:10m rate=10r/s;

    # Buffer and Timeouts #

    # Buffer size for POST submissions
    client_body_buffer_size 10k;
    client_max_body_size 8m;

    # Buffer size for Headers
    client_header_buffer_size 1k;

    # Max time to receive client headers/body (Default 60s)
    #client_body_timeout 12ms;
    #client_header_timeout 12ms;

    # Max time to keep a connection open
    #keepalive_timeout 15ms;

    # Max time for the client to accept/receive response
    #send_timeout 10s;

    # Skip buffering for static files (when sending Data from Server Disk)
    sendfile on;

    # Optimise the size of Data packets sent to client
    tcp_nopush on;

    server {
        server_name www.carreh.tk;
        listen 80;
        listen 443 ssl;

        # Managed by Certbot
        ssl_certificate /etc/letsencrypt/live/www.carreh.tk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.carreh.tk/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        return 301 https://carreh.tk$request_uri;
    }    

    server {
        # Server configuration
        server_name carreh.tk;
        listen 80;
        listen 443 ssl http2; 

        if ($scheme = http) {
            return 301 https://$server_name$request_uri;
        }
        
        # Managed by Certbot
        ssl_certificate /etc/letsencrypt/live/carreh.tk/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/carreh.tk/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

        root /sites/carreh/backend/static/angular;

        # Default = index index.html
        index index.html;

        #Rate Limiting (per request)
        limit_req zone=MYZONE burst=5 nodelay;

        # Locations blocks
        location / {
            try_files $uri $uri/ /index.html;
        }

        location /images {
            root /sites/carreh/backend/static;
            access_log /var/log/nginx/images.access.log;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1h;
        }

        location ~* \.(css|js)$ {
            access_log off;
            add_header Cache-Control public;
            add_header Pragma public;
            add_header Vary Accept-Encoding;
            expires 1h;
        }
        
        location /api {
            proxy_pass http://carreh.tk:3000;
            access_log /var/log/nginx/api.access.log;
            proxy_http_version 1.1;
            proxy_set_header proxied_header nginx;
            proxy_set_header Host $server_name:$server_port;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            
            proxy_set_header X-Fowarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Fowarded-Proto $scheme;

            #proxy_cache_bypass $http_upgrade;
            add_header proxied_by nginx;

            # Secure Area
            #auth_basic "Secure Area";
            #auth_basic_user_file /path/
        }

        location /adminlocation {
            auth_basic "Secure Area";
            auth_basic_user_file /etc/nginx/.htpasswd;
        }

    }
}